---
import { getLangFromUrl } from "src/i18n/utils";
import CardIndex from "./CardIndex.astro";

const { 
  title, 
  inicio, 
  fin, 
  sectionId, 
  background, 
  descripcion, 
  sections, 
  link,
  genero
} = Astro.props;

const lang = getLangFromUrl(Astro.url);

const urlBase = `https://moda-link-api.deno.dev/api/${lang === "en" ? "en/" : "" }v1/products?`;
const params = new URLSearchParams();
params.set("genero", genero);
console.log("params: ", urlBase + params);

const response = await fetch(urlBase + params);
const products = await response.json();


---

<div class={` flex flex-col gap-y-3 py-6`}>
  <h2 class="text-xl md:text-3xl   px-5 2xl:text-center font-fugazOne">
    {title}
    {
      link && <a
      href={link}
      target="_self"
      aria-label={"visitar: " + title}
      class="text-color_pink1 inline-block translate-y-1"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="2"
        stroke="currentColor"
        class="w-6 h-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M13.19 8.688a4.5 4.5 0 0 1 1.242 7.244l-4.5 4.5a4.5 4.5 0 0 1-6.364-6.364l1.757-1.757m13.35-.622 1.757-1.757a4.5 4.5 0 0 0-6.364-6.364l-4.5 4.5a4.5 4.5 0 0 0 1.242 7.244"
        ></path>
      </svg>
    </a>
    }
    
  </h2>

  <p class="px-5 2xl:text-center  text-sm sm:text-lg text-gray-600 ">
    {descripcion}
  </p>
  {
    sections && (
      <ul class="flex gap-x-2 items-center px-5 md:mx-auto">
        <li class="px-1 bg-color_pink2 text-color_pink1">clasicas</li>
        <li class="px-1 bg-color_pink2 text-color_pink1">mangas</li>
        <li class="px-1 bg-color_pink2 text-color_pink1">formales</li>
        <li class="px-1 bg-color_pink2 text-color_pink1">deportivas</li>
      </ul>
    )
  }

  <astro-greet class={`${background && ""}`} data-message={sectionId}>
    <section id={sectionId} class="grid-container scroll-js px-5">
      {
        products
          .slice(inicio, fin)
          .map((product: any) => (
            <CardIndex
              description={product.descripcion}
              image={product.imagen}
              link={product.url}
              marca={product.marca}
              genero={product.genero}
              likes={product.likes}
              urlAfiliado={product.urlAfiliado}
              precio={product.precio}
              categoria={product.categoria}
              subCategoria={product.subCategoria}
            />
          ))
      }
    </section>
  </astro-greet>
</div>

<script>
  import Conveyer from "@egjs/conveyer";

  class AstroGreet extends HTMLElement {
    constructor() {
      super();

      const sectionId = this.dataset.message;
      const formatId = `#${sectionId}`;
      new Conveyer(formatId);
    }
  }

  customElements.define("astro-greet", AstroGreet);
</script>

<style>
  .grid-container {
    display: grid;
    grid-auto-flow: column;
    overflow-x: scroll;
    grid-template-rows: auto auto;
    gap: 20px;
  }
  .grid-container::-webkit-scrollbar {
    width: 0;
  }

  .items {
    width: 100px;
    height: 100px;
    border: solid 1px black;
  }
</style>
