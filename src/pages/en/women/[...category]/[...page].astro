---
import type { GetStaticPaths } from "astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card.astro";
import Filter from "@components/Filter.astro";
import Layout from "@layouts/Layout.astro";
import Pagination from "@components/Pagination.astro";
import { orderProducts } from "@libs/products.libs";
import dataSeo from "@locales/en/femenino/data-seo.json"
import categories from "@locales/en/femenino/categories.json"

export const getStaticPaths = (async ({ paginate }) => {

  // const urlBase = "https://moda-link-api.deno.dev/api/v1/products?";
  const urlBase = await import.meta.env.MODALINK_API_EN;

  // Usar Promise.all() para realizar las peticiones de manera concurrente
  const paths = await Promise.all(
    categories.map(async (category) => {

      const params = new URLSearchParams();
      params.set("genero", "mujer");
      params.set("filter", category.params.category);

      if(category.props.subCategory){
        params.set("subCategory", category.props.subCategory)
      }

      const response = await fetch(urlBase + params);
      const products = await response.json();

      // return paginate(orderProducts(products), {
      //   params: category.params,
      //   pageSize: 100,
      // });

      return paginate(orderProducts(products), {
        params: category.params,
        props: category.props,
        pageSize: 100,
      });

    })
  );

  return paths.flat();
}) satisfies GetStaticPaths;

const { category } = Astro.params;
const { page,subCategory, subcategories } = Astro.props;

const pathname = new URL(Astro.request.url).pathname.split("/");
const firstPath = `/${pathname[1]}/${pathname[2]}`;

const getElementSeo = dataSeo.find((item) => item.name === category);
---

<Layout
  title={getElementSeo?.title ?? "Moda Link"}
  description={getElementSeo?.description ?? "Ropa para mujeres"}
>
  <!-- <h1>categoria ropa</h1> -->
  <div class="h-full">
    <Header />
    <main class="mt-10 flex flex-col py-10">
      <Filter  category={category} genero="mujer" />

      <section class="grid-container place-content-center">
        <!-- <div class="flex flex-col col-span-full gap-y-3">
          <div>
            <h1 class="text-2xl font-fugazOne">{getElementSeo?.title ?? category}</h1>
            
          </div>
          <ul class="flex gap-x-1">
           
            {
              subcategories.map((sub)=>(
              <li  class="px-4 py-2 border"><a href={sub.url} aria-label={`visitar ${sub.name}`}>{sub.name}</a></li>
              ))
            }
          </ul>
        </div> -->
        {
          page.data.map((product: any) => (
            <Card
              description={product.descripcion}
              image={product.imagen}
              link={product.url}
              marca={product.marca}
              genero={product.genero}
              likes={product.likes}
              urlAfiliado={product.urlAfiliado}
              precio={product.precio}
              categoria={product.categoria}
              subCategoria={product.subCategoria}
            />
          ))
        }
      </section>
    </main>
    <div class="pb-10">
      <Pagination
        gender={pathname[1]}
        length={page.lastPage}
        currentUrl={page.url.current}
        currentPage={page.currentPage}
        firstUrl={firstPath}
        prevUrl={page.url.prev}
        nextUrl={page.url.next}
        lastUrl={`${firstPath}/${page.lastPage}`}
      />
    </div>
    <Footer />
  </div>
</Layout>



<style>
  .grid-container {
    display: grid;
    grid-template-rows: repeat(auto-fit, 1fr);
    grid-template-columns: repeat(auto-fill, 180px);
    gap: 16px;
  }

  @media (min-width: 640px) {
    .grid-container {
      display: grid;
      grid-template-rows: repeat(auto-fit, 1fr);
      grid-template-columns: repeat(auto-fill, 240px);
      gap: 20|1px;
    }
  }

  .grid-container::-webkit-scrollbar {
    width: 0;
  }

  .items {
    width: 100px;
    height: 100px;
    border: solid 1px black;
  }
</style>
