---
import type { GetStaticPaths } from "astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card.astro";
import Filter from "@components/Filter.astro";
import Layout from "@layouts/Layout.astro";
import Pagination from "@components/Pagination.astro";
import { orderProducts } from "@libs/products.libs";
import { getLangFromUrl } from "src/i18n/utils";
import dataSeo from "@locales/es/masculino/data-seo.json"
import categories from "@locales/es/masculino/categories.json"

export const getStaticPaths = (async ({ paginate }) => {

  // const urlBase = "https://moda-link-api.deno.dev/api/v1/products?";
  const urlBase = await import.meta.env.MODALINK_API_ES;

  // Usar Promise.all() para realizar las peticiones de manera concurrente
  const paths = await Promise.all(
    categories.map(async (category) => {
      const params = new URLSearchParams();
      params.set("genero", "hombre");
      params.set("filter", category.params.category);

      const response = await fetch(urlBase + params);
      const products = await response.json();

      return paginate(orderProducts(products.slice(0,20)), {
        params: category.params,
        pageSize: 100,
      });
    })
  );

  // Utilizar flat() para aplanar el array de arrays devuelto por Promise.all()
  return paths.flat();
}) satisfies GetStaticPaths;

const { category } = Astro.params;
const { page } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const pathname = new URL(Astro.request.url).pathname.split("/");
const firstPath = lang === "en" ? `/${pathname[1]}/${pathname[2]}/${pathname[3]}` : `/${pathname[1]}/${pathname[2]}`;



const getElementSeo = dataSeo.find((item) => item.nombre === category);

// const headers = [
//   {
//     title: "gorros de lana",
//     description:
//       "Lorem ipsum dolor sit amet consectetur adipisicing elit. A debitis ea laboriosam minima, quibusdam voluptatum quod maiores, atque consequatur voluptatibus laudantium odit repellat necessitatibus. Animi cupiditate hic doloremque iste fuga!",
//   },
//   {
//     title: "Sombreros de Fieltro",
//     description:
//       "Lorem ipsum dolor sit amet consectetur adipisicing elit. A debitis ea laboriosam minima, quibusdam voluptatum quod maiores, atque consequatur voluptatibus laudantium odit repellat necessitatibus. Animi cupiditate hic doloremque iste fuga!",
//   },
//   {
//     title: "Gorros de Punto",
//     description:
//       "Lorem ipsum dolor sit amet consectetur adipisicing elit. A debitis ea laboriosam minima, quibusdam voluptatum quod maiores, atque consequatur voluptatibus laudantium odit repellat necessitatibus. Animi cupiditate hic doloremque iste fuga!",
//   },
//   {
//     title: "Boinas y Berets",
//     description:
//       "Lorem ipsum dolor sit amet consectetur adipisicing elit. A debitis ea laboriosam minima, quibusdam voluptatum quod maiores, atque consequatur voluptatibus laudantium odit repellat necessitatibus. Animi cupiditate hic doloremque iste fuga!",
//   },
//   {
//     title: "Sombreros de Invierno",
//     description:
//       "Lorem ipsum dolor sit amet consectetur adipisicing elit. A debitis ea laboriosam minima, quibusdam voluptatum quod maiores, atque consequatur voluptatibus laudantium odit repellat necessitatibus. Animi cupiditate hic doloremque iste fuga!",
//   },
//   {
//     title: "Gorros Deportivos",
//     description:
//       "Lorem ipsum dolor sit amet consectetur adipisicing elit. A debitis ea laboriosam minima, quibusdam voluptatum quod maiores, atque consequatur voluptatibus laudantium odit repellat necessitatibus. Animi cupiditate hic doloremque iste fuga!",
//   },
//   {
//     title: "Gorros de Moda Urbana",
//     description:
//       "Lorem ipsum dolor sit amet consectetur adipisicing elit. A debitis ea laboriosam minima, quibusdam voluptatum quod maiores, atque consequatur voluptatibus laudantium odit repellat necessitatibus. Animi cupiditate hic doloremque iste fuga!",
//   },
//   {
//     title: "Sombreros Playeros",
//     description:
//       "Lorem ipsum dolor sit amet consectetur adipisicing elit. A debitis ea laboriosam minima, quibusdam voluptatum quod maiores, atque consequatur voluptatibus laudantium odit repellat necessitatibus. Animi cupiditate hic doloremque iste fuga!",
//   },
//   {
//     title: "Accesorios para la Cabeza",
//     description:
//       "Lorem ipsum dolor sit amet consectetur adipisicing elit. A debitis ea laboriosam minima, quibusdam voluptatum quod maiores, atque consequatur voluptatibus laudantium odit repellat necessitatibus. Animi cupiditate hic doloremque iste fuga!",
//   },
// ];
---

<!-- modificar title category para incluir palabras claves mas utilziadas -->
<Layout
  title={getElementSeo?.title ?? "Moda Link"}
  description={getElementSeo?.descripcion ?? "Ropa para hombres"}
>
  <div class="h-full">
    <Header />
    <main class="mt-10 flex flex-col py-10">
      <Filter  category={category} genero="hombre" />

      <!-- <div class="w-9/12">
        <h2 class="text-2xl font-bold">
          Pantalones para hombre, los mejores pantalones seleccionados para
          usted
        </h2>
        <p class="text-lg">
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Odit iure
          laborum rerum illo explicabo voluptate nemo adipisci magnam. Eum,
          blanditiis! Voluptatum unde sequi similique fugiat aliquam corrupti
          quam asperiores nam.
        </p>
      </div> -->
      <section
        class="flex flex-wrap place-content-center mx-auto gap-3 sm:gap-6 items-center "
      >
        {
          page.data.map((product: any) => (
            <Card
              description={product.descripcion}
              image={product.imagen}
              link={product.url}
              marca={product.marca}
              genero={product.genero}
              likes={product.likes}
              urlAfiliado={product.urlAfiliado}
              precio={product.precio}
              categoria={product.categoria}
              subCategoria={product.subCategoria}
            />
          ))
        }
      </section>
    
    </main>
    <div class="pb-10">
      <Pagination
        gender={pathname[1]}
        length={page.lastPage}
        currentUrl={page.url.current}
        currentPage={page.currentPage}
        firstUrl={firstPath}
        prevUrl={page.url.prev}
        nextUrl={page.url.next}
        lastUrl={`${firstPath}/${page.lastPage}`}
      />
    </div>
    <Footer />
  </div>
</Layout>
