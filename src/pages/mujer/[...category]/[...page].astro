---
import type { GetStaticPaths } from "astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import Card from "@components/Card.astro";
import Filter from "@components/islands/Filter.svelte";
import Layout from "@layouts/Layout.astro";
import Pagination from "@components/Pagination.astro";
import { orderProducts } from "@libs/products.libs";

export const getStaticPaths = (async ({ paginate }) => {
  const categories = [
    { params: { category: "accesorios" } },
    { params: { category: "camiseta" } },
    { params: { category: "pantalon" } },
    { params: { category: "gorros" } },
    { params: { category: "zapatos" } },
  ];

  const urlBase = "https://moda-link-api.deno.dev/api/v1/products?";

  // Usar Promise.all() para realizar las peticiones de manera concurrente
  const paths = await Promise.all(
    categories.map(async (category) => {

      const params = new URLSearchParams();
      params.set("genero", "mujer");
      params.set("filter", category.params.category);

      const response = await fetch(urlBase + params);
      const products = await response.json();

      return paginate(orderProducts(products), {
        params: category.params,
        pageSize: 100,
      });
    })
  );

  return paths.flat();
}) satisfies GetStaticPaths;

const { category } = Astro.params;
const { page } = Astro.props;

const pathname = new URL(Astro.request.url).pathname.split("/");
const firstPath = `/${pathname[1]}/${pathname[2]}`;

const dataSeoFemenina = [
{
    title: "Moda femenina: Sombreros y Gorras para Mujeres | Moda Link",
    nombre: "gorros",
    nombreSeo: "sombreros y gorras para mujeres",
    descripcion:
      "Descubre una amplia selección de sombreros y gorras para mujeres en Moda Link. Encuentra desde sombreros elegantes hasta gorras deportivas, perfectos para complementar tu estilo en cualquier ocasión.",
  },
  {
    title: "Moda femenina: Blusas y Tops de moda | Moda Link",
    nombre: "camiseta",
    nombreSeo: "blusas y tops para mujeres",
    descripcion:
      "Explora nuestra colección de blusas y tops de moda para mujeres en Moda Link. Encuentra desde diseños clásicos hasta las últimas tendencias, ideales para crear looks versátiles y a la moda.",
  },
  {
    title: "Moda femenina: Pantalones y Vaqueros de tendencia | Moda Link",
    nombre: "pantalon",
    nombreSeo: "pantalones y vaqueros para mujeres",
    descripcion:
      "Encuentra una amplia variedad de pantalones y vaqueros de tendencia para mujeres en Moda Link. Desde pantalones casuales hasta jeans modernos, encuentra el ajuste perfecto para cualquier ocasión.",
  },
  {
    title: "Moda femenina: Accesorios de estilo | Moda Link",
    nombre: "accesorios",
    nombreSeo: "accesorios de estilo para mujeres",
    descripcion:
      "Descubre una selección de accesorios de estilo para mujeres en Moda Link. Completa tu look con nuestros accesorios modernos, desde joyas elegantes hasta bolsos de moda.",
  },
  {
    title: "Moda femenina: Calzado de moda | Moda Link",
    nombre: "zapatos",
    nombreSeo: "calzado de moda para mujeres",
    descripcion:
      "Explora nuestra colección de calzado de moda para mujeres en Moda Link. Encuentra desde zapatos formales hasta opciones más casuales que se adapten a tu estilo y te hagan destacar.",
  },
];
const getElementSeo = dataSeoFemenina.find((item) => item.nombre === category);
---

<Layout
  title={getElementSeo?.title ?? "Moda Link"}
  description={getElementSeo?.descripcion ?? "Ropa para mujeres"}
>
  <!-- <h1>categoria ropa</h1> -->
  <div class="h-full">
    <Header />
    <main class="mt-10 flex">
      <Filter client:visible category={category} genero="mujer" />
      <section
        class="flex flex-wrap place-content-center mx-auto gap-3 sm:gap-10 items-center py-10"
      >
        {
          page.data.map((product: any) => (
            <Card
              description={product.descripcion}
              image={product.imagen}
              link={product.url}
              marca={product.marca}
              genero={product.genero}
              likes={product.likes}
              urlAfiliado={product.urlAfiliado}
              precio={product.precio}
              categoria={product.categoria}
              subCategoria={product.subCategoria}
            />
          ))
        }
      </section>
    </main>
    <div class="pb-10">
      <Pagination
        gender={pathname[1]}
        length={page.lastPage}
        currentUrl={page.url.current}
        currentPage={page.currentPage}
        firstUrl={firstPath}
        prevUrl={page.url.prev}
        nextUrl={page.url.next}
        lastUrl={`${firstPath}/${page.lastPage}`}
      />
    </div>
    <Footer />
  </div>
</Layout>
